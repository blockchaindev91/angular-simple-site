name: Integration

on:
  push:
    branches:
      - 'release/**'

jobs:
  build:
    name: Build+Push image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Login to registry
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        if: success()
        run: docker build --build-arg VERSION=int-${GITHUB_REF##*/} --build-arg COMMIT=${GITHUB_SHA} -t sakpaas/frontend:int-${GITHUB_REF##*/}-${GITHUB_SHA} .

      - name: Tag image
        if: success()
        run: docker tag sakpaas/frontend:int-${GITHUB_REF##*/}-${GITHUB_SHA} sakpaas/frontend:integration

      - name: Push <image>:int-<version>-<commit>
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push sakpaas/frontend:int-${GITHUB_REF##*/}-${GITHUB_SHA}

      - name: Push <image>:integration
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push sakpaas/frontend:integration


  deploy:
    name: Deployment
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          repository: 'SAKPaaS/deployment'

      - name: Kustomize (image)
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 3.4.0
          command: "cd frontend/integration && kustomize edit set image sakpaas/frontend=sakpaas/frontend:int-${GITHUB_REF##*/}-${GITHUB_SHA}"

      - name: Kustomize (replicas)
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 3.4.0
          command: "cd frontend/integration && kustomize edit set replicas frontend-integration=1"

      - name: Kustomize (build)
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 3.4.0
          command: "cd frontend/integration && kustomize build -o kustomization-build.yaml"

      - name: Deploy
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f frontend/integration/kustomization-build.yaml

      - name: Wait until available
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: wait -f frontend/integration/deployment.yaml --for=condition=available --timeout=300s
